{
	"name": "fs-ai-tools",
	"publisher": "jakob-tischler",
	"repository": {
		"url": "https://github.com/JakobTischler/VSCode-FS-AI-Tools"
	},
	"displayName": "FS AI Tools",
	"description": "A bag of tools for AI flightplans and .cfg files",
	"version": "1.7.3",
	"icon": "icon.png",
	"license": "",
	"engines": {
		"vscode": "^1.73.1"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:fsAiTools.airlineView",
		"onCommand:fsAiTools.cleanAircraftCfg",
		"onCommand:fsAiTools.cleanFlightplan",
		"onCommand:fsAiTools.changeAircraftNumber",
		"onCommand:fsAiTools.countAircraft",
		"onCommand:fsAiTools.createAifpCfg",
		"onCommand:fsAiTools.createAircraft",
		"onCommand:fsAiTools.createFlightplanHeader",
		"onCommand:fsAiTools.createFlightplanHeaderFromAifp",
		"onCommand:fsAiTools.deleteAircraft",
		"onCommand:fsAiTools.deleteAircraftFromAircraftCfg",
		"onCommand:fsAiTools.flightplanMetadata",
		"onCommand:fsAiTools.generateAirports",
		"onCommand:fsAiTools.groupByAircraftType",
		"onCommand:fsAiTools.hoursToWeek",
		"onCommand:fsAiTools.matchAcNumbers",
		"onCommand:fsAiTools.openMasterAirportsFile",
		"onCommand:fsAiTools.rebaseAircraftNumbers",
		"onCommand:fsAiTools.renameFiles",
		"onCommand:fsAiTools.renumberAddOnsCfg",
		"onCommand:fsAiTools.renumberSceneryCfg",
		"onCommand:fsAiTools.replaceAircraft",
		"onCommand:fsAiTools.showAircraftList",
		"onCommand:fsAiTools.switchFS9FSX",
		"onView:fsAiTools.aircraftCfgCommandsView",
		"onView:fsAiTools.flightplansCommandsView",
		"onView:fsAiTools.flightplansAircraftView"
	],
	"main": "./out/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "fs-ai-tools",
					"title": "FS AI Tools",
					"icon": "res/view-container-icon.svg"
				}
			]
		},
		"views": {
			"fs-ai-tools": [
				{
					"id": "fsAiTools.flightplansCommandsView",
					"name": "Flightplans",
					"type": "webview",
					"contextualTitle": "FS AI Tools"
				},
				{
					"id": "fsAiTools.flightplansAircraftView",
					"name": "Aircraft",
					"contextualTitle": "FS AI Tools"
				}
			]
		},
		"commands": [
			{
				"command": "fsAiTools.addColor",
				"category": "Calico Colors",
				"title": "Add Color"
			},
			{
				"command": "fsAiTools.clearColors",
				"category": "Calico Colors",
				"title": "Clear Colors",
				"icon": "$(clear-all)"
			},
			{
				"command": "fsAiTools.refreshFlightplansAircraftView",
				"title": "Refresh Flightplans Aircraft View",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.airlineView",
				"title": "Show Airline View",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.cleanAircraftCfg",
				"title": "Clean Aircraft.cfg",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.cleanFlightplan",
				"title": "Clean Flightplan",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.changeAircraftNumber",
				"title": "Change AC# Number",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.countAircraft",
				"title": "Count Aircraft",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.createAifpCfg",
				"title": "Create aifp.cfg File",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.createAircraft",
				"title": "Create Aircraft from Registrations",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.createFlightplanHeader",
				"title": "Create Flightplan Header",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.createFlightplanHeaderFromAifp",
				"title": "Create Flightplan Header from aifp.cfg",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.deleteAircraft",
				"title": "Delete Aircraft",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.deleteAircraftFromAircraftCfg",
				"title": "Delete Aircraft from aircraft.cfg",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.flightplanMetadata",
				"title": "Get Flightplan Metadata",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.generateAirports",
				"title": "Generate Airports.txt",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.groupByAircraftType",
				"title": "Group by Aircraft Type",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.hoursToWeek",
				"title": "Convert to weekly flightplan",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.matchAcNumbers",
				"title": "Match AC#s",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.openMasterAirportsFile",
				"title": "Open Master Airports File",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.rebaseAircraftNumbers",
				"title": "Rebase AC#s",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.renameFiles",
				"title": "Rename flightplan files",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.renumberAddOnsCfg",
				"title": "Renumber add-ons.cfg",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.renumberSceneryCfg",
				"title": "Renumber scenery.cfg",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.replaceAircraft",
				"title": "Replace aircraft in other flightplan",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.showAircraftList",
				"title": "Show Aircraft List",
				"category": "FS AI Tools"
			},
			{
				"command": "fsAiTools.switchFS9FSX",
				"title": "Switch FS9 ‚ü∑ FSX",
				"category": "FS AI Tools"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "fsAiTools.airlineView",
					"when": "resourceFilename =~ /^(aircraft|airports|flightplans).*txt$/i"
				},
				{
					"command": "fsAiTools.cleanAircraftCfg",
					"when": "resourceFilename =~ /aircraft.cfg/i"
				},
				{
					"command": "fsAiTools.cleanFlightplan",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.changeAircraftNumber",
					"when": "editorHasSelection && resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.countAircraft",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.createAifpCfg",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.createAircraft",
					"when": "editorHasSelection"
				},
				{
					"command": "fsAiTools.createFlightplanHeader",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.createFlightplanHeaderFromAifp",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.deleteAircraft",
					"when": "resourceFilename =~ /^aircraft.*txt$/i && editorHasSelection"
				},
				{
					"command": "fsAiTools.deleteAircraftFromAircraftCfg",
					"when": "resourceFilename =~ /^aircraft.cfg$/i && editorHasSelection"
				},
				{
					"command": "fsAiTools.flightplanMetadata",
					"when": "config.fs-ai-tools.isDev && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.generateAirports",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.groupByAircraftType",
					"when": "resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.hoursToWeek",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.matchAcNumbers",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.openMasterAirportsFile"
				},
				{
					"command": "fsAiTools.rebaseAircraftNumbers",
					"when": "resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.renameFiles",
					"when": "resourceFilename =~ /^((flightplans)|(aircraft)|(airports)).*txt$/i"
				},
				{
					"command": "fsAiTools.renumberAddOnsCfg",
					"when": "resourceFilename =~ /^add-ons.cfg/i"
				},
				{
					"command": "fsAiTools.renumberSceneryCfg",
					"when": "resourceFilename =~ /^scenery.cfg/i"
				},
				{
					"command": "fsAiTools.replaceAircraft",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.showAircraftList",
					"when": "resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.switchFS9FSX",
					"when": "editorHasSelection && resourceFilename =~ /^flightplans.*txt$/i"
				}
			],
			"editor/context": [
				{
					"command": "fsAiTools.airlineView",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.airlineView._ShowInContextMenu && resourceFilename =~ /^(aircraft|airports|flightplans).*txt$/i"
				},
				{
					"command": "fsAiTools.cleanAircraftCfg",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.cleanAircraftCfg._ShowInContextMenu && resourceFilename =~ /aircraft.cfg/i"
				},
				{
					"command": "fsAiTools.cleanFlightplan",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.cleanFlightplan._ShowInContextMenu && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.changeAircraftNumber",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.changeAircraftNumber.showInContextMenu && editorHasSelection && resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.countAircraft",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.countAircraft._ShowInContextMenu && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.createAifpCfg",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.createAifpCfg.showInContextMenu && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.createAircraft",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.createAircraft._ShowCreateAircraftInContextMenu && editorHasSelection"
				},
				{
					"command": "fsAiTools.createFlightplanHeader",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.createFlightplanHeader.showInContextMenu && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.createFlightplanHeaderFromAifp",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.createFlightplanHeaderFromAifp.showInContextMenu && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.deleteAircraft",
					"group": "FS AI Tools",
					"when": "resourceFilename =~ /^aircraft.*txt$/i && editorHasSelection"
				},
				{
					"command": "fsAiTools.deleteAircraftFromAircraftCfg",
					"group": "FS AI Tools",
					"when": "resourceFilename =~ /^aircraft.cfg$/i && editorHasSelection"
				},
				{
					"command": "fsAiTools.generateAirports",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.generateAirports.showInContextMenu && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.groupByAircraftType",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.groupByAircraftType._ShowInContextMenu && resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.matchAcNumbers",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.matchAcNumbers.showInContextMenu && resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.rebaseAircraftNumbers",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.rebaseAircraftNumbers._ShowInContextMenu && resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.renameFiles",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.renameFiles._ShowRenameFilesInContextMenu && resourceFilename =~ /^((flightplans)|(aircraft)|(airports)).*txt$/i"
				},
				{
					"command": "fsAiTools.renumberAddOnsCfg",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.renumberAddOnsCfg.showInContextMenu && resourceFilename =~ /^add-ons.cfg/i"
				},
				{
					"command": "fsAiTools.renumberSceneryCfg",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.renumberSceneryCfg.showInContextMenu && resourceFilename =~ /^scenery.cfg/i"
				},
				{
					"command": "fsAiTools.showAircraftList",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.showAircraftList._ShowInContextMenu && resourceFilename =~ /^((flightplans)|(aircraft)).*txt$/i"
				},
				{
					"command": "fsAiTools.switchFS9FSX",
					"group": "FS AI Tools",
					"when": "config.fs-ai-tools.switchFS9Fsx.showInContextMenu && editorHasSelection && resourceFilename =~ /^flightplans.*txt$/i"
				}
			],
			"explorer/context": [
				{
					"command": "fsAiTools.airlineView",
					"group": "FS AI Tools",
					"when": "resourceFilename =~ /^(aircraft|airports|flightplans).*txt$/i"
				},
				{
					"command": "fsAiTools.generateAirports",
					"group": "FS AI Tools",
					"when": "resourceFilename =~ /^flightplans.*txt$/i"
				},
				{
					"command": "fsAiTools.renameFiles",
					"group": "FS AI Tools",
					"when": "resourceFilename =~ /^((flightplans)|(aircraft)|(airports)).*txt$/i"
				}
			]
		},
		"configuration": [
			{
				"type": "object",
				"title": "General",
				"properties": {
					"fs-ai-tools.aircraftDataFilePath": {
						"type": "string",
						"default": "",
						"title": "Custom Aicraft Data File Path",
						"markdownDescription": "Full path to a custom aircraft data JSON file. Will overwrite / add to default aircraft data. See _*[Wiki](https://github.com/JakobTischler/VSCode-FS-AI-Tools/wiki/Data:-Aircraft-Data-Base-File)*_ for formatting.",
						"scope": "window"
					},
					"fs-ai-tools.masterAirportsFilePath": {
						"type": "string",
						"default": "",
						"title": "Master Airports File Path",
						"markdownDescription": "Full path to a master airports file. Used by `Generate Airports` and `Show Airline View`.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Airline View",
				"properties": {
					"fs-ai-tools.airlineView._ShowInContextMenu": {
						"type": "boolean",
						"default": false,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Airline View\" command to the context menu when an `Aircraft.txt` or `Flightplans.txt` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.airlineView.distanceUnit": {
						"type": "string",
						"default": "nm",
						"enum": [
							"km",
							"mi",
							"nm"
						],
						"enumDescriptions": [
							"Display the route distance in kilometers",
							"Display the route distance in miles",
							"Display the route distance in nautical miles"
						],
						"scope": "window"
					},
					"fs-ai-tools.airlineView.logoDirectoryPath": {
						"type": "string",
						"default": "",
						"title": "Logo Directory Path",
						"markdownDescription": "Absolute path to a directory containing airline logo files.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Change Aircraft Number",
				"properties": {
					"fs-ai-tools.changeAircraftNumber.showInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Change Aircraft Number\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open and text has been selected.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Clean aircraft.cfg",
				"properties": {
					"fs-ai-tools.cleanAircraftCfg._ShowInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Clean Aircraft.cfg\" command to the context menu when an `aircraft.cfg` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.cleanAircraftCfg.callsignsUppercase": {
						"type": "boolean",
						"default": true,
						"title": "Convert callsigns to uppercase",
						"markdownDescription": "Converts all `atc_airline=‚Ä¶` callsigns to uppercase.",
						"scope": "window"
					},
					"fs-ai-tools.cleanAircraftCfg.removeUnusedLines": {
						"type": "boolean",
						"default": true,
						"title": "Remove unused lines",
						"markdownDescription": "Removes the lines defined in *`#fs-ai-tools.cleanAircraftCfg.removeUnusedLinesItems#`* from the fltsim entries.",
						"scope": "window"
					},
					"fs-ai-tools.cleanAircraftCfg.removeUnusedLinesItems": {
						"markdownDescription": "List of `fltsim` entry lines to be removed.\n\n* `key=value` for distinct values\n\n* `key=*` for any non-empty value\n\n* `key=_` for only empty values\n\n* `key` for all values.",
						"scope": "window",
						"type": "array",
						"items": {
							"type": "string"
						},
						"default": [
							"atc_id=_",
							"atc_id_color",
							"atc_flight_number",
							"atc_heavy=0",
							"visual_damage"
						]
					},
					"fs-ai-tools.cleanAircraftCfg.renumber": {
						"type": "boolean",
						"default": true,
						"title": "Renumber",
						"markdownDescription": "Renumber the `fltsim` entries in sequence, starting at `0`.",
						"scope": "window"
					},
					"fs-ai-tools.cleanAircraftCfg.sortProperties": {
						"type": "boolean",
						"default": true,
						"title": "Sort Properties",
						"markdownDescription": "Sort the `fltsim` entries' properties.",
						"scope": "window"
					},
					"fs-ai-tools.cleanAircraftCfg.sortPropertiesOrder": {
						"title": "Sort Properties Order",
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"atc_airline",
								"atc_flight_number",
								"atc_heavy",
								"atc_id",
								"atc_id_color",
								"atc_model",
								"atc_parking_codes",
								"atc_parking_types",
								"description",
								"kb_checklists",
								"kb_reference",
								"model",
								"panel",
								"prop_anim_ratio",
								"sim",
								"sound",
								"texture",
								"title",
								"ui_createdby",
								"ui_manufacturer",
								"ui_type",
								"ui_typerole",
								"ui_variation",
								"visual_damage"
							]
						},
						"uniqueItems": true,
						"markdownDescription": "Defines the sort order of the `fltsim` entries' properties. Only applicable if `#fs-ai-tools.cleanAircraftCfg.sortProperties#` is active. Reorder by drag and dropping. Undefined keys are appended at the end of the `fltsim` entry.",
						"default": [
							"title",
							"sim",
							"model",
							"panel",
							"sound",
							"texture",
							"atc_airline",
							"atc_id",
							"ui_manufacturer",
							"ui_type",
							"ui_variation",
							"atc_parking_codes",
							"atc_parking_types",
							"atc_heavy",
							"prop_anim_ratio",
							"visual_damage",
							"description",
							"ui_createdby"
						]
					}
				}
			},
			{
				"type": "object",
				"title": "Clean Flightplan",
				"properties": {
					"fs-ai-tools.cleanFlightplan._ShowInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Clean Flightplan\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.leadingZeroesFlightnumbers": {
						"type": "boolean",
						"default": true,
						"title": "Leading zeroes flightnumbers",
						"markdownDescription": "Pads the flightnumbers to 4 digits with zeroes (e.g. `12` becomes `0012`).",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.leadingZeroesFlightLevels": {
						"type": "boolean",
						"default": true,
						"title": "Leading zeroes flight levels",
						"markdownDescription": "Pads the flight levels to 3 digits with zeroes (e.g. `70` becomes `070`).",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.addAtToArrivalTimes": {
						"type": "boolean",
						"default": true,
						"title": "Add @ to arrival times",
						"markdownDescription": "Adds `@` to arrival times (e.g. `12:34` becomes `@12:34`).",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.removeSeconds": {
						"type": "boolean",
						"default": true,
						"title": "Remove seconds",
						"markdownDescription": "Removes seconds from arrival and departure times (e.g. `12:34:56` becomes `12:34`).",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.randomPercentages": {
						"type": "boolean",
						"default": true,
						"title": "Randomize percentages",
						"markdownDescription": "Randomizes the flightplans' percentages to values between the `min` and `max` set.",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.randomPercentagesMin": {
						"type": "number",
						"default": 1,
						"minimum": 1,
						"maximum": 100,
						"title": "Randomize percentage min",
						"markdownDescription": "If *`#fs-ai-tools.cleanFlightplan.randomPercentages#`* is activated, this will be the min value.",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.randomPercentagesMax": {
						"type": "number",
						"default": 1,
						"minimum": 1,
						"maximum": 100,
						"title": "Randomize percentage max",
						"markdownDescription": "If *`#fs-ai-tools.cleanFlightplan.randomPercentages#`* is activated, this will be the max value.",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.uppercase": {
						"type": "boolean",
						"default": true,
						"title": "Uppercase",
						"markdownDescription": "Transforms the flightplan to uppercase.",
						"scope": "window"
					},
					"fs-ai-tools.cleanFlightplan.changeAirports": {
						"title": "Change Airport Codes",
						"markdownDescription": "Changes each occurrence of the old airport code to the new one.\n\n* Format: `OldICAO:NewICAO`.\n\n* Leave empty for no airport changes.",
						"scope": "window",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^(\\w{3,4}):(\\w{3,4})$"
						},
						"uniqueItems": true,
						"default": [
							"FAJS:FAOR",
							"FLND:FLSK",
							"FWLI:FWKI",
							"GQNO:GQNN",
							"HSNL:HSNN",
							"KDRU:M26",
							"KNXP:NXP",
							"LYPR:BKPR",
							"ORBS:ORBI",
							"UA0F:UASS",
							"UGEE:UDYZ",
							"UTSK:UTSL",
							"VOBG:VOBL",
							"WIIP:WIHP",
							"WIKM:WIOM",
							"WRRR:WADD",
							"WRSJ:WARR",
							"WRSQ:WARQ"
						]
					},
					"fs-ai-tools.cleanFlightplan.adjustComments": {
						"type": "string",
						"default": "Don't change",
						"enum": [
							"Don't change",
							"1 space",
							"No space"
						],
						"enumDescriptions": [
							"Doesn't change any comments.",
							"Adds/removes space(s) after double slashes so that there is exactly 1 space after each \"//\".",
							"Removes all spaces after double slashes so that there is no space after each \"//\"."
						],
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Count Aircraft",
				"properties": {
					"fs-ai-tools.countAircraft._ShowInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Count Aircraft\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open and text has been selected.",
						"scope": "window"
					},
					"fs-ai-tools.countAircraft.emptyLinesBetweenGroups": {
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"description": "A new group is recognized in the `Flightplans‚Ä¶.txt` file after this number of empty lines. The count will then be written to the previous group and reset to 0 to count the new group's aircraft.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Create aifp.cfg",
				"properties": {
					"fs-ai-tools.createAifpCfg.showInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Create aifp.cfg\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Create Aircraft",
				"properties": {
					"fs-ai-tools.createAircraft._ShowInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Create aircraft\" command to the context menu when text is selected.",
						"scope": "window"
					},
					"fs-ai-tools.createAircraft.copyTextureCfgToTextureFolder": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "If a `texture.cfg` file exists in the aircraft folder, copy it to the newly created texture folders.",
						"scope": "window"
					},
					"fs-ai-tools.createAircraft.copyTitlesToClipboard": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Copy the titles of the created fltsim entries to the clipboard.",
						"scope": "window"
					},
					"fs-ai-tools.createAircraft.createFolders": {
						"type": "string",
						"default": "Create",
						"enum": [
							"Create",
							"Don't create",
							"Ask everytime"
						],
						"enumDescriptions": [
							"Always creates the texture folders in the template's directory",
							"Never creates the texture folders in the template's directory",
							"You will be asked during the data input process if the texture folders should be created"
						],
						"scope": "window"
					},
					"fs-ai-tools.createAircraft.templates": {
						"type": "array",
						"title": "Templates",
						"markdownDescription": "List of templates (file paths)",
						"scope": "window",
						"items": {
							"type": "string"
						},
						"default": [
							"K:\\Prepar3D\\_AI Aircraft\\HTAI\\HTAI Cessna 172 Skyhawk\\fltsim-template.cfg"
						]
					}
				}
			},
			{
				"type": "object",
				"title": "Create Flightplan Header",
				"properties": {
					"fs-ai-tools.createFlightplanHeader.showInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Create Flightplan Header\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.createFlightplanHeaderFromAifp.showInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Create Flightplan Header from aifp.cfg\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.createFlightplanHeader.template": {
						"type": "string",
						"default": "//{fsx}\n//{airline? | }{icao? | }\"{callsign}\"\n//{author?, }{season}\n\n",
						"editPresentation": "multilineText",
						"title": "Header template",
						"markdownDescription": "The template for the header text, wherein placeholders will be replaced with data from athe `aifp.cfg` file. Available placeholders: `{airline}`, `{icao}`, `{callsign}`, `{author}`, `{season}`, `{fsx}`.\n* `{fsx}` will be converted to \"FSXDAYS=TRUE/FALSE\"\n* To add optional text after a value (will only be added if the value exists), use `{icao?textAfterValue}`.\n* Enter a line break using `[Shift]`+`[Enter]`.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Delete Aircraft",
				"properties": {
					"fs-ai-tools.deleteAircraft._ShowInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Delete Aircraft\" command to the context menu when an `Aircraft‚Ä¶.txt` file is open and some text has been selected.",
						"scope": "window"
					},
					"fs-ai-tools.deleteAircraft.aircraftDirectory": {
						"type": "string",
						"default": "",
						"title": "Aircraft directory",
						"markdownDescription": "Full path to the folder containing all AI aircraft folders. `aircraft.cfg` files within that directory as well as its subdirectories will be checked.",
						"scope": "window"
					},
					"fs-ai-tools.deleteAircraft.confirmDeletion": {
						"type": "string",
						"default": "Each aircraft",
						"enum": [
							"Each aircraft",
							"Each aircraft.cfg file",
							"Once",
							"None"
						],
						"enumDescriptions": [
							"Asks you to confirm the deletion of each aircraft in the queue",
							"Asks you to confirm the deletion for the entries of each aircraft.cfg file in the queue",
							"Asks you to once confirm the deletion for all aircraft in the queue",
							"You won't be asked for any confirmation"
						],
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Generate Airports",
				"properties": {
					"fs-ai-tools.generateAirports.showInContextMenu": {
						"type": "boolean",
						"default": false,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Generate Airports\" command to the context menu when a `Flightplans‚Ä¶.txt` file is open.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Group by Aircraft Type",
				"properties": {
					"fs-ai-tools.groupByAircraftType._ShowInContextMenu": {
						"type": "boolean",
						"default": false,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Group by Aircraft Type\" command to the context menu when a `Aircraft‚Ä¶.txt` or `Flightplan‚Ä¶.txt` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.groupByAircraftType.emptyLinesBetweenGroupsAircraftTxt": {
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"markdownDescription": "Number of empty lines to create between aircraft type groups in the `Aircraft‚Ä¶.txt` file.",
						"scope": "window"
					},
					"fs-ai-tools.groupByAircraftType.emptyLinesBetweenGroupsFlightplansTxt": {
						"type": "integer",
						"default": 2,
						"minimum": 1,
						"markdownDescription": "Number of empty lines to create between aircraft type groups in the `Flightplans‚Ä¶.txt` file.",
						"scope": "window"
					},
					"fs-ai-tools.groupByAircraftType.sortByWingspan": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "If active, the aircraft groups are sorted by their respective wingspans in descending order. The wingspan values can be defined in the custom aircraft data JSON file (*`#fs-ai-tools.aircraftDataFilePath#`*).",
						"scope": "window"
					},
					"fs-ai-tools.groupByAircraftType.addWingspanToGroupHeadline": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Imperial",
							"Metric"
						],
						"enumDescriptions": [
							"Doesn't append the wingspan",
							"Appends the wingspan, converted to feet",
							"Appends the wingspan, converted to meters"
						],
						"scope": "window"
					},
					"fs-ai-tools.groupByAircraftType.addCountToGroupHeadline": {
						"type": "boolean",
						"default": true,
						"title": "Add Aircraft Count to Group Headline",
						"markdownDescription": "Appends the number of aircraft that each aircraft type has to the type headline (e.g. \"‚Ä¶ [13]\").",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Match AC#s",
				"properties": {
					"fs-ai-tools.matchAcNumbers.showInContextMenu": {
						"type": "boolean",
						"default": false,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Match AC#s\" command to the context menu when a `Flightplans‚Ä¶.txt` file is open.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Rebase Aircraft Numbers",
				"properties": {
					"fs-ai-tools.rebaseAircraftNumbers._ShowInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Rebase AC#s\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open and text has been selected.",
						"scope": "window"
					},
					"fs-ai-tools.rebaseAircraftNumbers.emptyLinesBetweenGroupsAircraftTxt": {
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"description": "A new group is recognized in the `Aircraft‚Ä¶.txt` file after this number of empty lines.",
						"scope": "window"
					},
					"fs-ai-tools.rebaseAircraftNumbers.emptyLinesBetweenGroupsFlightplansTxt": {
						"type": "integer",
						"default": 2,
						"minimum": 1,
						"description": "A new group is recognized in the `Flightplans‚Ä¶.txt` file after this number of empty lines.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Rename files",
				"properties": {
					"fs-ai-tools.renameFiles._ShowInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Rename Files\" command to the context menu when an `Aircraft‚Ä¶.txt`, `Airports‚Ä¶.txt` or `Flightplan‚Ä¶.txt` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.renameFiles.filenameTemplate": {
						"type": "string",
						"default": "{Base}_{icao?_}{name}",
						"title": "Filename template",
						"markdownDescription": "The format with which the files will be renamed. Available placeholders: `{Base}`, `{base}`, `{name}`, `{icao}`, `{callsign}`, `{author}`, `{season}`",
						"scope": "window"
					},
					"fs-ai-tools.renameFiles.replaceSpacesWithUnderscores": {
						"type": "boolean",
						"default": false,
						"title": "Replace spaces with underscores",
						"markdownDescription": "If activated, the spaces **within** a placeholder will be replaced with underscores (\"_\"). Spaces defined in the template itself will remain.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Renumber add-ons.cfg, scenery.cfg",
				"properties": {
					"fs-ai-tools.renumberAddOnsCfg.showInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Renumber\" command to the context menu when a `add-ons.cfg` file is open.",
						"scope": "window"
					},
					"fs-ai-tools.renumberSceneryCfg.showInContextMenu": {
						"type": "boolean",
						"default": true,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Renumber\" command to the context menu when a `scenery.cfg` file is open.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Show Aircraft List",
				"properties": {
					"fs-ai-tools.showAircraftList._ShowInContextMenu": {
						"type": "boolean",
						"default": false,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Show Aircraft List\" command to the context menu when an `Aircraft‚Ä¶.txt` or `Flightplan‚Ä¶.txt` file is open. Remember to set `#window.dialogStyle#` to `custom` for best legibility.",
						"scope": "window"
					},
					"fs-ai-tools.showAircraftList.customDataFilePath": {
						"type": "string",
						"default": "",
						"title": "[Deprecated] Custom Aicraft Data File Path",
						"markdownDescription": "Full path to a custom aircraft data JSON file. Will overwrite / add to default aircraft data. See _*[TODO]()*_ for format.",
						"deprecationMessage": "Deprecated: Please use fs-ai-tools.aircraftDataFilePath instead.",
						"markdownDeprecationMessage": "**Deprecated**: Please use `#fs-ai-tools.aircraftDataFilePath#` instead.",
						"scope": "window"
					}
				}
			},
			{
				"type": "object",
				"title": "Switch FS9 ‚ü∑  FSX",
				"properties": {
					"fs-ai-tools.switchFS9Fsx.showInContextMenu": {
						"type": "boolean",
						"default": false,
						"title": "Add to Context Menu",
						"markdownDescription": "Adds the \"Switch FS9 ‚ü∑ FSX\" command to the context menu when a `Flightplan‚Ä¶.txt` file is open and text has been selected.",
						"scope": "window"
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"watch": "tsc -watch -p ./",
		"package": "vsce package",
		"esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"test-compile": "tsc -p ./",
		"test": "eslint src --ext ts && tsc --noEmit"
	},
	"devDependencies": {
		"@types/lodash": "^4.14.191",
		"@types/mocha": "^10.0.1",
		"@types/node": "^18.11.17",
		"@types/vscode": "^1.73.1",
		"@typescript-eslint/eslint-plugin": "^5.46.1",
		"@vscode/test-electron": "^2.2.1",
		"esbuild": "^0.16.9",
		"eslint": "^8.30.0",
		"eslint-plugin-header": "^3.1.1",
		"mocha": "^10.2.0",
		"rimraf": "^3.0.2",
		"typescript": "^4.9.3",
		"vsce": "^2.15.0"
	},
	"dependencies": {
		"axios": "^1.1.3",
		"fs": "~0.0.1-security",
		"lodash": "^4.17.21",
		"path": "~0.12.7",
		"tiny-glob": "^0.2.9",
		"trash": "^8.1.0"
	}
}
